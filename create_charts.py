import matplotlib.pyplot as plt
import pandas as pd
from io import StringIO

# Data as a string
data = """
Time,CPU Usage,Memory Usage,Disk Read,Disk Write,Network Sent,Network Recv,IOPS Read,IOPS Write
1742563818.370259,25.3,64.7,779133329408,1764983705600,6764962816,5953214464,0,3
1742563820.377701,15.6,65.5,779133329408,1764984569856,6765230080,5953480704,0,139
1742563822.385399,10.8,66.2,779133329408,1764985044992,6765307904,5953559552,0,56
1742563824.3931541,4.2,66.2,779133329408,1764985327616,6765477888,5953729536,0,23
1742563826.4149508,14.3,66.2,779133358080,1764986720256,6765732864,5953982464,7,58
1742563828.421727,16.2,66.7,779133403136,1765012971520,6766094336,5954341888,2,114
1742563830.428863,8.2,66.2,779133403136,1765013356544,6766493696,5954740224,0,35
1742563832.43253,3.7,66.2,779133403136,1765013753856,6766876672,5955123200,0,39
1742563834.437897,5.7,66.1,779133403136,1765014011904,6767295488,5955542016,0,24
1742563836.447836,10.4,66.2,779133423616,1765017341952,6767845376,5956091904,5,561
1742563838.454646,6.7,66.2,779133423616,1765017677824,6768456704,5956701184,0,33
1742563840.46116,8.3,66.2,779133423616,1765044461568,6769149952,5957383168,0,233
1742563842.472963,2.9,65.6,779133423616,1765045366784,6770040832,5958258688,0,121
1742563844.478948,4.3,65.6,779133423616,1765048508416,6770547712,5958768640,0,328
1742563846.484343,2.0,65.5,779133423616,1765048692736,6771291136,5959512064,0,16
1742563848.490002,2.1,65.5,779133423616,1765048979456,6772157440,5960377344,0,25
1742563850.499072,5.9,65.5,779133423616,1765076422656,6773014528,5961236480,0,345
1742563852.506805,2.8,65.6,779133440000,1765076762624,6774022144,5962243072,2,31
1742563854.51476,2.7,65.6,779133440000,1765077102592,6775027712,5963248640,0,29
1742563856.5225239,2.3,65.5,779133440000,1765077409792,6775998464,5964219392,0,28
1742563858.531017,2.8,65.4,779133440000,1765077782528,6777066496,5965287424,0,34
1742563860.537441,15.9,65.2,779133452288,1765080027136,6778297344,5966517248,3,309
1742563862.543819,5.0,66.3,779133476864,1765108576256,6779490304,5967709184,3,245
1742563864.551512,3.6,66.4,779133476864,1765108887552,6780672000,5968889856,0,28
1742563866.560218,3.6,66.2,779133480960,1765109256192,6782180352,5970398208,1,36
1742563868.569364,6.9,66.6,779133480960,1765110792192,6783285248,5971503104,0,248
1742563870.5775201,10.3,66.7,779133480960,1765111554048,6784908288,5973126144,0,128
1742563872.583124,7.3,66.8,779133489152,1765138309120,6786487296,5974702080,2,198
1742563874.593816,3.7,66.8,779133493248,1765141889024,6788030464,5976245248,1,407
1742563876.603636,3.2,66.9,779133501440,1765142208512,6789922816,5978135552,2,37
"""

# Read the data into a pandas DataFrame
df = pd.read_csv(StringIO(data))

# Convert the 'Time' column to datetime format for better plotting
df['Time'] = pd.to_datetime(df['Time'], unit='s')

# Plot the data
plt.figure(figsize=(12, 8))

# Plot CPU Usage
plt.subplot(2, 2, 1)
plt.plot(df['Time'], df['CPU Usage'], label='CPU Usage', color='tab:blue')
plt.xlabel('Time')
plt.ylabel('CPU Usage (%)')
plt.title('CPU Usage Over Time')
plt.xticks(rotation=45)

# Plot Memory Usage
plt.subplot(2, 2, 2)
plt.plot(df['Time'], df['Memory Usage'], label='Memory Usage', color='tab:green')
plt.xlabel('Time')
plt.ylabel('Memory Usage (%)')
plt.title('Memory Usage Over Time')
plt.xticks(rotation=45)

# Plot Disk IOPS (Read and Write)
plt.subplot(2, 2, 3)
plt.plot(df['Time'], df['IOPS Read'], label='IOPS Read', color='tab:red', linestyle='--')
plt.plot(df['Time'], df['IOPS Write'], label='IOPS Write', color='tab:orange', linestyle='--')
plt.xlabel('Time')
plt.ylabel('IOPS')
plt.title('Disk IOPS (Read and Write) Over Time')
plt.legend(loc='upper left')
plt.xticks(rotation=45)

# Plot Network Sent and Recv
plt.subplot(2, 2, 4)
plt.plot(df['Time'], df['Network Sent'], label='Network Sent', color='tab:purple')
plt.plot(df['Time'], df['Network Recv'], label='Network Recv', color='tab:brown')
plt.xlabel('Time')
plt.ylabel('Bytes')
plt.title('Network Sent and Recv Over Time')
plt.legend(loc='upper left')
plt.xticks(rotation=45)

# Adjust layout for better readability
plt.tight_layout()

# Show the plot
plt.show()
